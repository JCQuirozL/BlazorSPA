@page "/"
@using PoliciesBlazorApp.Models
@using System.Net.Http
@using PoliciesBlazorApp.Responses
@using System.Net.Http.Headers

@inject HttpClient Http

<PageTitle>Pólizas</PageTitle>

<h3>Pólizas por cobrar</h3>

<DataGrid TItem="Data" Data="@PoliciesList.Data" Sortable="true" Editable="true" ShowPager="true" PageSize="3" Hoverable="true" Responsive="true" 
EditMode="DataGridEditMode.Popup" FixedHeader="true">
    <DataGridColumn TItem="Data" Field="@nameof(Data.Policy)" Caption="Póliza" />
    <DataGridColumn TItem="Data" Field="Clipert.TotalPremium" Caption="Prima Total" DisplayFormat="{0:C}"
                    DisplayFormatProvider="@System.Globalization.CultureInfo.GetCultureInfo("mx-MX")" />
    <DataGridColumn TItem="Data" Field="Leasing.PaymentFolio" Caption="Folio Pago" Editable="true" />
    <DataGridColumn TItem="Data" Field="Leasing.Bank" Caption="Banco" Editable="true" Width="200px"/>
    <DataGridColumn TItem="Data" Field="Leasing.AccountNumber" Caption="No. Cuenta" Editable="true" />
    <DataGridColumn TItem="Data" Field="Leasing.DocumentDate" Caption="Fecha Depósito" Editable="true" />
    <DataGridColumn TItem="Data" Field="Leasing.DepositAmount" Caption="Importe Depositado" Editable="true" DisplayFormat="{0:C}"
                    DisplayFormatProvider="@System.Globalization.CultureInfo.GetCultureInfo("mx-MX")" />
    <DataGridColumn TItem="Data" Field="Leasing.ReferenceId" Caption="Referencia" Editable="true" />
    <DataGridColumn TItem="Data" Field="Clipert.Certificate" Caption="No. Cert." Displayable="false"/>
    <DataGridColumn TItem="Data" Field="Clipert.Invoice" Caption="No. Fact." />
    <DataGridColumn TItem="Data" Field="Clipert.SendingDateASE" Caption="Fecha Emisión" />
    <DataGridColumn TItem="Data" Field="Clipert.EmmiterCenter" Caption="Centro Emisor" Displayable="false"/>
    <DataGridCheckColumn TItem="Data" Field="@nameof(Data.Validated)" Caption="Validada" Editable="true">
        <DisplayTemplate>
            <Check TValue="Boolean" Checked="context.Validated" Disabled="true" />
        </DisplayTemplate>
    </DataGridCheckColumn>
    <DataGridColumn TItem="Data" Caption="Comentarios">
        <DisplayTemplate>
            <Button Color="Color.Default" Width="Width.Auto">Ver</Button>
        </DisplayTemplate>
    </DataGridColumn>
    @*<DataGridCommandColumn TItem="Data" DeleteCommandAllowed=false>
    <NewCommandTemplate>
    <TableRowHeader>Comentarios</TableRowHeader>
    </NewCommandTemplate>
    <DisplayTemplate>
    <Button Color="Color.Default">Ver comentarios</Button>
    </DisplayTemplate>
    </DataGridCommandColumn>*@
    <DataGridCommandColumn TItem="Data" DeleteCommandAllowed=false>
        <NewCommandTemplate>
            <TableRowHeader>Acciones</TableRowHeader>
        </NewCommandTemplate>
        <EditCommandTemplate>
            <Button Color="Color.Secondary" Clicked="@context.Clicked">Editar</Button>
            <div style="padding:3px;"></div>
            <Button Color="Color.Primary" Clicked="@context.Clicked">Detalle</Button>
        </EditCommandTemplate>
    </DataGridCommandColumn>

</DataGrid>

@code {
    public string Url = "/insurance/v1/policies";
    public string Url2 = "/api/PoliciesCollection";

    public BillingData PoliciesList = new();

    protected override async Task OnInitializedAsync() => await LoadPoliciesAsync();

    async Task LoadPoliciesAsync()
    {
        try
        {
            var request = new HttpRequestMessage(HttpMethod.Get, Url);
            request.Headers.Add("Session-Id", "10000057cpbas096");
            using var httpResponse = await Http.SendAsync(request);

            PoliciesList = await httpResponse.Content.ReadFromJsonAsync<BillingData>();
            //PoliciesList = await Http.GetFromJsonAsync<List<BillingData>>(Url);
        }
        catch (Exception)
        {

            throw;
        }

    }
}